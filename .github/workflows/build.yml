name: Build and Test

on:
  push:
    branches:
      - main
      - work-and-test
  pull_request:
    branches:
      - main
      - work-and-test

jobs:
  build_vue_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies and build Vue frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: List build directory
        run: ls -al frontend/dist

  build_spring_backend:
    runs-on: ubuntu-latest
    needs: build_vue_frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'  # Corrected to use Temurin (Adoptium)

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring backend
        run: |
          cd backend
          mvn clean install -DskipTests

  run_tests:
    runs-on: ubuntu-latest
    needs: build_spring_backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'  # Corrected to use Temurin (Adoptium)

      - name: Set environment variables
        run: |
          echo "JWT_SECRET=VHJ5aGZxk6b43Fg5l3bdz78TzJ6w04UKlGjGh5A0bOY=" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=root" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cd backend
          mvn test -e -X -Dspring.profiles.active=test
